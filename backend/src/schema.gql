# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthResponse {
  accessToken: String!
  user: User!
}

input ChangePasswordDto {
  confirmPassword: String!
  newPassword: String!
  oldPassword: String!
}

type ChatListItemType {
  chatWithUser: User!
  id: String!
  lastMessage: MessageType!
  unreadMessagesCount: Int!
}

type ChatType {
  chatWithUser: User!
  id: String!
  messages: [MessageType!]!
}

type CommentType {
  canDelete: Boolean!
  createdAt: DateTime!
  id: Int!
  text: String!
  user: User!
}

input CreateCommentDto {
  postId: Int!
  text: String!
}

input CreateMessageDto {
  text: String!
  userToId: Int!
}

input CreatePostDto {
  tags: String
  text: String!
  video: Upload
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input GetPostsDto {
  search: String
  skip: Int
  take: Int
}

input GetUsersDto {
  search: String
  skip: Int
  take: Int
  userFollowTo: Int
  userFollowers: Int
}

input LoginDto {
  email: String!
  password: String!
}

type MessageType {
  author: User!
  chatId: String!
  createdAt: DateTime!
  id: String!
  isMyMessage: Boolean!
  isOpened: Boolean!
  text: String!
}

type Mutation {
  changePassword(changePasswordInput: ChangePasswordDto!): SuccessMessageType!
  createComment(createCommentInput: CreateCommentDto!): CommentType!
  createMessage(CreateMesageInput: CreateMessageDto!): MessageType!
  createPost(createPostInput: CreatePostDto!): PostType!
  deleteComment(id: Int!): String
  deletePost(id: Int!): SuccessMessageType!
  login(loginInput: LoginDto!): AuthResponse!
  logout: String!
  openChatMessages(chatId: String!): SuccessMessageType!
  refreshToken: AuthResponse!
  register(registerInput: RegisterDto!): AuthResponse!
  toggleLikePost(postId: Int!): ToggleLike!
  toggleUserFollow(userToFollowId: Int!): ToggleFollowType!
  updateUser(updateProfileInput: UpdateProfileDto!): User!
}

type PostDetails {
  canDelete: Boolean!
  commentsCount: Float
  createdAt: DateTime!
  id: Int!
  isLiked: Boolean
  likesCount: Float
  otherPostIds: [Int!]
  tags: [String!]!
  text: String!
  user: User!
  video: String!
}

type PostType {
  canDelete: Boolean!
  commentsCount: Float
  createdAt: DateTime!
  id: Int!
  isLiked: Boolean
  likesCount: Float
  tags: [String!]!
  text: String!
  user: User!
  video: String!
}

type Query {
  getChat(chatId: String!): ChatType!
  getChatList: [ChatListItemType!]!
  getCommentsByPostId(postId: Int!): [CommentType!]!
  getFavoriteUserPosts(userId: Int!): [PostType!]!
  getPostById(id: Int!): PostDetails!
  getPosts(getPostInput: GetPostsDto!): [PostType!]!
  getSettings: SettingsType!
  getUserProfile(userId: Int!): UserProfileType!
  getUsers(getUsersInput: GetUsersDto): [User!]!
}

input RegisterDto {
  bio: String
  confirmPassword: String!
  email: String!
  fullname: String!
  image: Upload
  password: String!
}

type SettingsType {
  unreadMessagesCount: Float!
}

type SuccessMessageType {
  message: String!
}

type ToggleFollowType {
  isFollowed: Boolean!
}

type ToggleLike {
  isLiked: Boolean!
}

input UpdateProfileDto {
  bio: String
  email: String
  fullname: String
  image: Upload
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  bio: String
  canFollow: Boolean
  canSendMessage: Boolean
  email: String!
  fullname: String!
  id: Int!
  image: String
  isFollowed: Boolean
}

type UserProfileType {
  bio: String
  canFollow: Boolean
  canSendMessage: Boolean
  email: String!
  followersCount: Int!
  followingCount: Int!
  fullname: String!
  id: Int!
  image: String
  isFollowed: Boolean
  isMyProfile: Boolean!
  posts: [PostType!]!
}